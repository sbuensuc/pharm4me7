@model IEnumerable<pharm4me7.Models.Patient>

@{
    ViewBag.Title = "Patients";
}

<h2>Customers</h2>

@*test*@

<p>
    @if (User.IsInRole("Admin") || User.IsInRole("Doctor"))
    {
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
    }
</p>
<input type="text" id="searchFName" onkeyup="searchFunction()" placeholder="First Name...">
<input type="text" id="searchLName" onkeyup="searchFunction()" placeholder="Last Name...">
<input type="text" id="searchHCard" onkeyup="searchFunction()" placeholder="Healthcard...">
<table id="patientTable"class="table">
    <tr>
        <th onclick="sortTable(0)">
            First Name
           
        </th>
        <th onclick="sortTable(1)">
            Last Name
       
        </th>
        <th onclick="sortTable(2)">
            @Html.DisplayNameFor(model => model.Healthcard)
        </th>
        <th onclick="sortTable(3)">
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th onclick="sortTable(4)">
                City
               
            </th>
            <th onclick="sortTable(5)">
                @Html.DisplayNameFor(model => model.Phone)
            </th>
        <th onclick="sortTable(6)">
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th onclick="sortTable(7)">
            DOB
            
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td data-th="First Name">
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td data-th="Last Name">
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td data-th="Healthcard #">
                @Html.DisplayFor(modelItem => item.Healthcard)
            </td>
            <td data-th="Address">
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td data-th="City">
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td data-th="Phone #">
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
            <td data-th="Gender">
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td data-th="DOB">
                @Html.DisplayFor(modelItem => item.Birth)
            </td>
            <td data-th="Action">
                <div class="btn-group">
                    @Html.ActionLink("Details", "PharmacyDetails", new { id = item.PatientId }, new { @class = "btn btn-info" }) 
                    @if (User.IsInRole("Admin") || User.IsInRole("Doctor"))
                {
                        @Html.ActionLink("Edit", "Edit", new { id = item.PatientId }, new { @class = "btn btn-success" })} 
                    @if (User.IsInRole("Admin"))
                {
                        @Html.ActionLink("Delete", "Delete", new { id = item.PatientId }, new { @class = "btn btn-danger" })
                    }
                </div>
            </td>
        </tr>
                }

</table>

<script>
    function searchFunction() {
        var input1, filter1, filter2, filter3, td, i, rows;

            filter1 = document.querySelector('#searchFName').value.toUpperCase();
            filter2 = document.querySelector('#searchLName').value.toUpperCase();
            filter3 = document.querySelector('#searchHCard').value.toUpperCase();

            rows = document.querySelector("#patientTable tbody").rows;
        

            for (i = 1; i < rows.length; i++) {
                var fNameCol = rows[i].cells[0].textContent.toUpperCase();
                var lNameCol = rows[i].cells[1].textContent.toUpperCase();
                var hCardCol = rows[i].cells[2].textContent.toUpperCase();


                if (fNameCol.indexOf(filter1) > -1 && lNameCol.indexOf(filter2) > -1 && hCardCol.indexOf(filter3) > -1) {
                    rows[i].style.display = "";
                } else {
                    rows[i].style.display = "none";
                }

            }
        
    }

function sortTable(n) {
    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
    table = document.getElementById("patientTable");
    switching = true;
    dir = "asc";
    while (switching) {
        switching = false;
        rows = table.rows;
        for (i = 1; i < (rows.length - 1) ; i++) {
            shouldSwitch = false;
            x = rows[i].getElementsByTagName("TD")[n];
            y = rows[i + 1].getElementsByTagName("TD")[n];
            if (dir == "asc") {
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    shouldSwitch = true;
                    break;
                }
            } else if (dir == "desc") {
                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                    shouldSwitch = true;
                    break;
                }
            }
        }
        if (shouldSwitch) {
            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
            switching = true;
            switchcount++;
        } else {
            if (switchcount == 0 && dir == "asc") {
                dir = "desc";
                switching = true;
            }
        }
    }
}
</script>
