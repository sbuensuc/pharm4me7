@model IEnumerable<pharm4me7.Models.Patient>

@{
    ViewBag.Title = "Patients";
}

<h2>Patients</h2>

@*test*@

<p>
    @if (User.IsInRole("Admin") || User.IsInRole("Doctor"))
    {
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
    }
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Patient ID", "Index", new { sortOrder = ViewBag.PatientIdSortParm })
        </th>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FnameParm })
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LnameParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Healthcard)
        </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>*@
<th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.ActionLink("DOB", "Index", new { sortOrder = ViewBag.DateSortParm })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PatientId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Healthcard)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Birth)
            </td>
            <td>
                <div class="btn-group">
                    @Html.ActionLink("Details", "Details", new { id = item.PatientId }, new { @class = "btn btn-info" }) 
                    @if (User.IsInRole("Admin") || User.IsInRole("Doctor"))
                {
                        @Html.ActionLink("Edit", "Edit", new { id = item.PatientId }, new { @class = "btn btn-success" })} 
                    @if (User.IsInRole("Admin"))
                {
                        @Html.ActionLink("Delete", "Delete", new { id = item.PatientId }, new { @class = "btn btn-danger" })
                    }
                </div>
            </td>
        </tr>
                }

</table>

<script>
function myFunction() {
  var input, filter, table, tr, td, i;
  input = document.getElementById("myInput");
  filter = input.value.toUpperCase();
  table = document.getElementById("myTable");
  tr = table.getElementsByTagName("tr");

  for (i = 0; i < tr.length; i++) {
    td = tr[i].getElementsByTagName("td")[0];
    if (td) {
      if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
        tr[i].style.display = "";
      } else {
        tr[i].style.display = "none";
      }
    }
  }
}
</script>
