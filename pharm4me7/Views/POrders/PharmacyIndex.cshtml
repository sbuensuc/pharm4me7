@model IEnumerable<pharm4me7.Models.POrder>

@{
    ViewBag.Title = "Requests";
}

<h2>Prescription Requests</h2>


<table id="requestTable"class="table">
    <tr>
        <th onclick="sortTable(0,1)" data-th="Name">
            Name
        </th>
        <th onclick="sortTable(1,1)" data-th="Date">
            Date
        </th>
        <th onclick="sortTable(2,1)" data-th="Prescription">
            Prescription
        </th>
        <th onclick="sortTable(3,1)" data-th="Brand">
            Brand
        </th>
        <th onclick="sortTable(4,1)" data-th="Refills">
            Refills
        </th>
        <th data-th="Note">
            Note
        </th>
        <th onclick="sortTable(5,1)" data-th="Clinic">
            Clinic
        </th>
        <th onclick="sortTable(6,1)" data-th="Physician">
            Physician
        </th>
        <th data-th="Action"></th>
    </tr>

    @foreach (var item in Model)
    {
        if (item.Accept == false && item.Deny == false)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.Patient.LastName), @Html.DisplayFor(modelItem => item.Prescript.Patient.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOrdered)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.item.Name) : @Html.DisplayFor(modelItem => item.Prescript.Disp) @Html.DisplayFor(modelItem => item.Prescript.DispType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.Sub)
                </td>


                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.Refill)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Note)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.Doctor.Clinic.Name)
                </td>

                <td>
                    <div class="btn-group">
                        @Html.ActionLink("Info", "Details", "Prescripts", new { id = item.PrescriptId }, new { @class = "btn btn-info" })
                        @Html.ActionLink("Accept", "PharmacyIndex", new { id = item.POrderId }, new { @class = "btn btn-primary" })
                        @Html.ActionLink("Deny", "Edit", new { id = item.POrderId }, new { @class = "btn btn-danger" })
                    </div>
                </td>
            </tr>
        }
    }

</table>

<h2>Archived Requests</h2>

<h3>Pending</h3>
<table id="archiveTable"class="table">
    <tr>
        <th onclick="sortTable(0,2)" data-th="Name">
            Name
        </th>
        <th onclick="sortTable(1,2)" data-th="Date">
            Date
        </th>
        <th onclick="sortTable(2,2)" data-th="Prescription">
            Prescription
        </th>
        <th onclick="sortTable(3,2)" data-th="Brand">
            Brand
        </th>
        <th onclick="sortTable(4,2)" data-th="Refills">
            Refills
        </th>
        <th data-th="Note">
            Note
        </th>
        <th data-th="Action"></th>
    </tr>

    @foreach (var item in Model)
    {
        if (item.Accept == true && item.Fill == false)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.Patient.LastName), @Html.DisplayFor(modelItem => item.Prescript.Patient.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOrdered)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.item.Name) : @Html.DisplayFor(modelItem => item.Prescript.Disp) @Html.DisplayFor(modelItem => item.Prescript.DispType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.Sub)
                </td>


                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.Refill)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Note)
                </td>
                <td>
                    PENDING | @Html.ActionLink("Deny", "Edit", new { id = item.POrderId }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    }
</table>

<h3>Filled</h3>
<table id="filledTable"class="table">
    <tr>
        <th onclick="sortTable(0,3)" data-th="Name">
            Name
        </th>
        <th onclick="sortTable(1,3)" data-th="Date">
            Date
        </th>
        <th onclick="sortTable(2,3)" data-th="Prescription">
            Prescription
        </th>
        <th onclick="sortTable(3,3)" data-th="Brand">
            Brand
        </th>
        <th onclick="sortTable(4,3)" data-th="Refills">
            Refills
        </th>
        <th data-th="Note">
            Note
        </th>
        <th data-th="Action"></th>
    </tr>

    @foreach (var item in Model)
    {
        if (item.Accept == true && item.Fill == true)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.Patient.LastName), @Html.DisplayFor(modelItem => item.Prescript.Patient.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOrdered)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.item.Name) : @Html.DisplayFor(modelItem => item.Prescript.Disp) @Html.DisplayFor(modelItem => item.Prescript.DispType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.Sub)
                </td>


                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.Refill)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Note)
                </td>
                <td>
                    PRESCRIPTION FILLED
                </td>
            </tr>
        }
    }
</table>

<h3>Denied</h3>
<table id="deniedTable"class="table">
    <tr>
        <th onclick="sortTable(0,4)" data-th="Name">
            Name
        </th>
        <th onclick="sortTable(1,4)" data-th="Date">
            Date
        </th>
        <th onclick="sortTable(2,4)" data-th="Prescription">
            Prescription
        </th>
        <th onclick="sortTable(3,4)" data-th="Brand">
            Brand
        </th>
        <th onclick="sortTable(4,4)" data-th="Refills">
            Refills
        </th>
        <th onclick="sortTable(5,4)" data-th="Note">
            Note
        </th>
        <th data-th="Action"></th>
    </tr>

    @foreach (var item in Model)
    {
        if (item.Deny == true)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.Patient.LastName), @Html.DisplayFor(modelItem => item.Prescript.Patient.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOrdered)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.item.Name) : @Html.DisplayFor(modelItem => item.Prescript.Disp) @Html.DisplayFor(modelItem => item.Prescript.DispType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.Sub)
                </td>


                <td>
                    @Html.DisplayFor(modelItem => item.Prescript.Refill)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Note)
                </td>
                <td>
                    DENIED
                </td>
            </tr>
        }
    }
</table>

<script>
function sortTable(n,t) {
    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
    if (t==1) {
        table = document.getElementById("requestTable");
    } else if (t==2) {
        table = document.getElementById("archiveTable");
    } else if (t==3) {
    table = document.getElementById("filledTable");
    } else {
        table = document.getElementById("deniedTable");
    }
  switching = true;
  dir = "asc";
  while (switching) {
	switching = false;
	rows = table.rows;
	for (i = 1; i < (rows.length - 1); i++) {
  	 shouldSwitch = false;
  	x = rows[i].getElementsByTagName("TD")[n];
  	 y = rows[i + 1].getElementsByTagName("TD")[n];
  	if (dir == "asc") {
    	if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
      	 shouldSwitch = true;
      	 break;
    	}
  	 } else if (dir == "desc") {
    	if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
      	 shouldSwitch = true;
      	 break;
    	}
  	 }
	}
	if (shouldSwitch) {
  	 rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
  	 switching = true;
  	switchcount ++;
	} else {
  	 if (switchcount == 0 && dir == "asc") {
    	 dir = "desc";
    	switching = true;
  	 }
	}
  }
}
</script>






