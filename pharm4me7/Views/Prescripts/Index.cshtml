@model IEnumerable<pharm4me7.Models.Prescript>

@{
    ViewBag.Title = "Prescriptions";
}

<h2>Prescriptions</h2>

<p>
@if (User.IsInRole("Admin") || User.IsInRole("Doctor"))
{
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
}
</p>
<table id="prescriptTable" class="table">
    <tr>
        <th onclick="sortTable(0)">
            Item
            @*@Html.ActionLink("Item", "Index", new { sortOrder = ViewBag.ItemSortParm })*@
        </th>
        <th onclick="sortTable(1)">
            First Name
           @*@Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FnameParm })*@
        </th>
        <th onclick="sortTable(2)">
            Last Name
            @*@Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LnameParm })*@
        </th>
        <th onclick="sortTable(3)">
            Date
            @*@Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm })*@
        </th>
        <th onclick="sortTable(4)">
            Amount
            @*@Html.ActionLink("Amount", "Index", new { sortOrder = ViewBag.AmountSortParm })*@
        </th>
        <th onclick="sortTable(5)">
            Unit Type
            @*@Html.ActionLink("Unit Type", "Index", new { sortOrder = ViewBag.UnitSortParm })*@
        </th>
        <th onclick="sortTable(6)">
            Details
        </th>
        <th onclick="sortTable(7)">
            Brand
           @*@Html.ActionLink("Brand", "Index", new { sortOrder = ViewBag.BrandSortParm })*@
        </th>
        <th onclick="sortTable(8)">
            @Html.DisplayNameFor(model => model.Refill)
        </th>
        <th onclick="sortTable(9)">
            Prescribed By
           @*@Html.ActionLink("Prescribed By", "Index", new { sortOrder = ViewBag.DocSortParm })*@
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Patient.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Patient.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Disp)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DispType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Sig)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Sub)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Refill)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Doctor.LastName), @Html.DisplayFor(modelItem => item.Doctor.FirstName)
        </td>
        <td>
            <div class="btn-group">
                @Html.ActionLink("Details", "Details", new { id = item.PrescriptId }, new { @class = "btn btn-info" })
                @*@if (User.IsInRole("Admin") || User.IsInRole("Doctor"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id = item.PrescriptId }, new { @class = "btn btn-success" })}
                @if (User.IsInRole("Admin") || User.IsInRole("Doctor"))
                {
                    @Html.ActionLink("Delete", "Delete", new { id = item.PrescriptId }, new { @class = "btn btn-danger" })
                }*@
            </div>

</td>
    </tr>
}

</table>

<script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("prescriptTable");
  switching = true;
  dir = "asc";
  while (switching) {
	switching = false;
	rows = table.rows;
	for (i = 1; i < (rows.length - 1); i++) {
  	 shouldSwitch = false;
  	x = rows[i].getElementsByTagName("TD")[n];
  	 y = rows[i + 1].getElementsByTagName("TD")[n];
  	if (dir == "asc") {
    	if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
      	 shouldSwitch = true;
      	 break;
    	}
  	 } else if (dir == "desc") {
    	if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
      	 shouldSwitch = true;
      	 break;
    	}
  	 }
	}
	if (shouldSwitch) {
  	 rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
  	 switching = true;
  	switchcount ++;
	} else {
  	 if (switchcount == 0 && dir == "asc") {
    	 dir = "desc";
    	switching = true;
  	 }
	}
  }
}
</script>
